<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="lv__gpu__nxp__pxp_8h" kind="file" language="C++">
    <compoundname>lv_gpu_nxp_pxp.h</compoundname>
    <innerclass refid="structlv__nxp__pxp__cfg__t" prot="public">lv_nxp_pxp_cfg_t</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="lv__gpu__nxp__pxp_8h_1adec571d8023d079189877d4028079fe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_res_t</type>
        <definition>lv_res_t lv_gpu_nxp_pxp_init</definition>
        <argsstring>(lv_nxp_pxp_cfg_t *cfg)</argsstring>
        <name>lv_gpu_nxp_pxp_init</name>
        <param>
          <type><ref refid="structlv__nxp__pxp__cfg__t" kindref="compound">lv_nxp_pxp_cfg_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset and initialize PXP device. This function should be called as a part of display init sequence.</para><para><simplesect kind="return"><para>LV_RES_OK: PXP init ok; LV_RES_INV: init error. See error log for more information. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_gpu/lv_gpu_nxp_pxp.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__gpu__nxp__pxp_8h_1aec990f3b0dc983d012d4e5b127a8721f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_gpu_nxp_pxp_deinit</definition>
        <argsstring>(void)</argsstring>
        <name>lv_gpu_nxp_pxp_deinit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Disable PXP device. Should be called during display deinit sequence. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_gpu/lv_gpu_nxp_pxp.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__gpu__nxp__pxp_8h_1a4c53693abbf8fc03402e84282a45e398" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_gpu_nxp_pxp_fill</definition>
        <argsstring>(lv_color_t *dest_buf, lv_coord_t dest_width, const lv_area_t *fill_area, lv_color_t color, lv_opa_t opa)</argsstring>
        <name>lv_gpu_nxp_pxp_fill</name>
        <param>
          <type><ref refid="unionlv__color1__t" kindref="compound">lv_color_t</ref> *</type>
          <declname>dest_buf</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>dest_width</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>fill_area</declname>
        </param>
        <param>
          <type><ref refid="unionlv__color1__t" kindref="compound">lv_color_t</ref></type>
          <declname>color</declname>
        </param>
        <param>
          <type>lv_opa_t</type>
          <declname>opa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fill area, with optional opacity.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_gpu/lv_gpu_nxp_pxp.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__gpu__nxp__pxp_8h_1a448026f985f1e5ef37547f0529441b27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_gpu_nxp_pxp_blit</definition>
        <argsstring>(lv_color_t *dest, lv_coord_t dest_width, const lv_color_t *src, lv_coord_t src_width, lv_coord_t copy_width, lv_coord_t copy_height, lv_opa_t opa)</argsstring>
        <name>lv_gpu_nxp_pxp_blit</name>
        <param>
          <type><ref refid="unionlv__color1__t" kindref="compound">lv_color_t</ref> *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>dest_width</declname>
        </param>
        <param>
          <type>const <ref refid="unionlv__color1__t" kindref="compound">lv_color_t</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>src_width</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>copy_width</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>copy_height</declname>
        </param>
        <param>
          <type>lv_opa_t</type>
          <declname>opa</declname>
        </param>
        <briefdescription>
<para>BLock Image Transfer - copy rectangular image from src buffer to dst buffer with effects. </para>        </briefdescription>
        <detaileddescription>
<para>By default, image is copied directly, with optional opacity configured by <computeroutput>opa</computeroutput>. Color keying can be enabled by calling <ref refid="lv__gpu__nxp__pxp_8h_1ad775020a1276b0391ea663676b6e50d5" kindref="member">lv_gpu_nxp_pxp_enable_color_key()</ref> before calling this function. Recoloring can be enabled by calling <ref refid="lv__gpu__nxp__pxp_8h_1a63ec70e845eef2b02a593a88342b8f49" kindref="member">lv_gpu_nxp_pxp_enable_recolor()</ref> before calling this function. Note that color keying and recoloring at the same time is not supported and black rectangle is rendered.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_gpu/lv_gpu_nxp_pxp.h" line="145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__gpu__nxp__pxp_8h_1ad775020a1276b0391ea663676b6e50d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_gpu_nxp_pxp_enable_color_key</definition>
        <argsstring>(void)</argsstring>
        <name>lv_gpu_nxp_pxp_enable_color_key</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Enable color keying for subsequent calls to <ref refid="lv__gpu__nxp__pxp_8h_1a448026f985f1e5ef37547f0529441b27" kindref="member">lv_gpu_nxp_pxp_blit()</ref> </para>        </briefdescription>
        <detaileddescription>
<para>Color key is defined by LV_COLOR_TRANSP symbol in lv_conf.h </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_gpu/lv_gpu_nxp_pxp.h" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__gpu__nxp__pxp_8h_1a08752c8268cc1353c679b0c6d377f027" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_gpu_nxp_pxp_disable_color_key</definition>
        <argsstring>(void)</argsstring>
        <name>lv_gpu_nxp_pxp_disable_color_key</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Disable color keying for subsequent calls to <ref refid="lv__gpu__nxp__pxp_8h_1a448026f985f1e5ef37547f0529441b27" kindref="member">lv_gpu_nxp_pxp_blit()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_gpu/lv_gpu_nxp_pxp.h" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__gpu__nxp__pxp_8h_1a63ec70e845eef2b02a593a88342b8f49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_gpu_nxp_pxp_enable_recolor</definition>
        <argsstring>(lv_color_t color, lv_opa_t opa)</argsstring>
        <name>lv_gpu_nxp_pxp_enable_recolor</name>
        <param>
          <type><ref refid="unionlv__color1__t" kindref="compound">lv_color_t</ref></type>
          <declname>color</declname>
        </param>
        <param>
          <type>lv_opa_t</type>
          <declname>opa</declname>
        </param>
        <briefdescription>
<para>Enable recolor feature for subsequent calls to <ref refid="lv__gpu__nxp__pxp_8h_1a448026f985f1e5ef37547f0529441b27" kindref="member">lv_gpu_nxp_pxp_blit()</ref> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">color</parametername>
</parameternamelist>
<parameterdescription>
<para>recolor value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">opa</parametername>
</parameternamelist>
<parameterdescription>
<para>effect opacity </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_gpu/lv_gpu_nxp_pxp.h" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__gpu__nxp__pxp_8h_1a2d1330a3d7876b2d4d64042188376ea2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_gpu_nxp_pxp_disable_recolor</definition>
        <argsstring>(void)</argsstring>
        <name>lv_gpu_nxp_pxp_disable_recolor</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Disable recolor feature for subsequent calls to <ref refid="lv__gpu__nxp__pxp_8h_1a448026f985f1e5ef37547f0529441b27" kindref="member">lv_gpu_nxp_pxp_blit()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_gpu/lv_gpu_nxp_pxp.h" line="172" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="30"><highlight class="preprocessor">#ifndef<sp/>LV_SRC_LV_GPU_LV_GPU_NXP_PXP_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_SRC_LV_GPU_LV_GPU_NXP_PXP_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>INCLUDES</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_misc/lv_area.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lv_misc/lv_color.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>DEFINES</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor">#define<sp/>LV_GPU_NXP_PXP_ID<sp/>PXP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor">#define<sp/>LV_GPU_NXP_PXP_IRQ_ID<sp/>PXP_IRQn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LV_GPU_NXP_PXP_BLIT_SIZE_LIMIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor">#define<sp/>LV_GPU_NXP_PXP_BLIT_SIZE_LIMIT<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LV_GPU_NXP_PXP_BLIT_OPA_SIZE_LIMIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor">#define<sp/>LV_GPU_NXP_PXP_BLIT_OPA_SIZE_LIMIT<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LV_GPU_NXP_PXP_FILL_SIZE_LIMIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor">#define<sp/>LV_GPU_NXP_PXP_FILL_SIZE_LIMIT<sp/>64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LV_GPU_NXP_PXP_FILL_OPA_SIZE_LIMIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor">#define<sp/>LV_GPU_NXP_PXP_FILL_OPA_SIZE_LIMIT<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>TYPEDEFS</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>**********************/</highlight></codeline>
<codeline lineno="81" refid="structlv__nxp__pxp__cfg__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="83" refid="structlv__nxp__pxp__cfg__t_1a1dd0817c87b6c7feb37dfe90b3d745b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_res_t<sp/>(*pxp_interrupt_init)(void);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="structlv__nxp__pxp__cfg__t_1a7ee7e4a454b99e8e5f2d116638dca997" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*pxp_interrupt_deinit)(void);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="structlv__nxp__pxp__cfg__t_1a7fbffe6f642659bd0d7c4715fad105f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*pxp_run)(void);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}<sp/><ref refid="structlv__nxp__pxp__cfg__t" kindref="compound">lv_nxp_pxp_cfg_t</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/><sp/>STATIC<sp/>VARIABLES</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>MACROS</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*<sp/><sp/><sp/>GLOBAL<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">lv_res_t<sp/><ref refid="lv__gpu__nxp__pxp_8h_1adec571d8023d079189877d4028079fe4" kindref="member">lv_gpu_nxp_pxp_init</ref>(<ref refid="structlv__nxp__pxp__cfg__t" kindref="compound">lv_nxp_pxp_cfg_t</ref><sp/>*<sp/>cfg);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__gpu__nxp__pxp_8h_1aec990f3b0dc983d012d4e5b127a8721f" kindref="member">lv_gpu_nxp_pxp_deinit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__gpu__nxp__pxp_8h_1a4c53693abbf8fc03402e84282a45e398" kindref="member">lv_gpu_nxp_pxp_fill</ref>(<ref refid="unionlv__color1__t" kindref="compound">lv_color_t</ref><sp/>*<sp/>dest_buf,<sp/>lv_coord_t<sp/>dest_width,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>fill_area,<sp/><ref refid="unionlv__color1__t" kindref="compound">lv_color_t</ref><sp/>color,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lv_opa_t<sp/>opa);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__gpu__nxp__pxp_8h_1a448026f985f1e5ef37547f0529441b27" kindref="member">lv_gpu_nxp_pxp_blit</ref>(<ref refid="unionlv__color1__t" kindref="compound">lv_color_t</ref><sp/>*<sp/>dest,<sp/>lv_coord_t<sp/>dest_width,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unionlv__color1__t" kindref="compound">lv_color_t</ref><sp/>*<sp/>src,<sp/>lv_coord_t<sp/>src_width,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lv_coord_t<sp/>copy_width,<sp/>lv_coord_t<sp/>copy_height,<sp/>lv_opa_t<sp/>opa);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__gpu__nxp__pxp_8h_1ad775020a1276b0391ea663676b6e50d5" kindref="member">lv_gpu_nxp_pxp_enable_color_key</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__gpu__nxp__pxp_8h_1a08752c8268cc1353c679b0c6d377f027" kindref="member">lv_gpu_nxp_pxp_disable_color_key</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__gpu__nxp__pxp_8h_1a63ec70e845eef2b02a593a88342b8f49" kindref="member">lv_gpu_nxp_pxp_enable_recolor</ref>(<ref refid="unionlv__color1__t" kindref="compound">lv_color_t</ref><sp/>color,<sp/>lv_opa_t<sp/>opa);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__gpu__nxp__pxp_8h_1a2d1330a3d7876b2d4d64042188376ea2" kindref="member">lv_gpu_nxp_pxp_disable_recolor</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*<sp/><sp/><sp/>STATIC<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LV_SRC_LV_GPU_LV_GPU_NXP_PXP_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/release/release_tmp/lvgl/src/lv_gpu/lv_gpu_nxp_pxp.h"/>
  </compounddef>
</doxygen>
